{"version":3,"sources":["components/Login/Login.js","components/TvGuide/Footer.js","components/TvGuide/Program.js","components/TvGuide/ShowNonExpired.js","components/TvGuide/LoadingCircle.js","components/TvGuide/TestChannel.js","components/TvGuide/ChannelContainer.js","components/TvGuide/ActionButton.js","components/TvGuide/TvGuide.js","components/RegisterForm/StatusDisplayer.js","components/RegisterForm/RegisterForm.js","components/ProtectedRoute.js","components/Home/AppBar.js","components/Home/Home.js","components/Profile/Profile.js","routes/index.js","components/UserProfile.js","serviceWorker.js","index.js","App.js"],"names":["withStyles","theme","root","display","alignItems","justifyContent","flexDirection","minWidth","FormControl","width","container","marginTop","_Component","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","handleClickShowPassword","state","showPassword","submit","error","data","email","password","json","JSON","stringify","fetch","method","headers","Content-Type","body","then","response","localStorage","setItem","token","sessionStorage","console","log","msg","history","push","catch","err","inherits","createClass","key","classes","react_default","a","createElement","className","index_es","variant","htmlFor","id","type","endAdornment","position","aria-label","onClick","Visibility_default","VisibilityOff_default","Link","to","Component","styling","backgroundColor","paddingLeft","fontSize","Footer","style","Program","toggleProgramDetails","detailsToggled","programData","channelData","Fragment","moment","Date","parse","startTime","format","title","description","ShowNonExpired","isLoaded","showExpired","currentDayShows","map","item","index","itemTime","endTime","currentTime","Program_Program","flexGrow","progress","margin","spacing","unit","color","linearColorPrimary","linearBarColorPrimary","react","CircularProgress_default","size","thickness","TestChannel","formatTime","offset1","offset2","t1","t2","add","concat","url","loadError","dateRange","prevProps","isToggled","startDate","endDate","toConsumableArray","titleIcon","TvGuide_LoadingCircle","ChannelContainer","parseCurrentDayShows","d1","d","shows","allShows","time","now","fetchData","contents","_this2","TestChannel_TestChannel","background","borderRadius","border","height","padding","boxShadow","label","textTransform","Button","TvGuide","toggleShows","switchDate","minDate","maxDate","displayDate","offset","day","logout","clear","apiData","yle1data","yle2data","yle1url","yle2url","yleTeemaUrl","yleAreenaUrl","PreviousButton","NextButton","ToggleExpired","TvGuide_StyledButton","children","ChannelContainer_ChannelContainer","react_fontawesome_index_es","icon","faFeather","TvGuide_Footer","visibility","disabled","StyledButton","whiteSpace","StatusDisplayer","text","RegisterForm","validateForm","userName","address","city","postalCode","phoneNumber","responseText","ProtectedRoute","WrappedComponent","_class","loading","redirect","Accept","Authorization","getItem","x-access-token","res","status","Error","Redirect","grow","menuButton","marginLeft","marginRight","breakpoints","up","link","textDecoration","location","pathname","split","toUpperCase","Home","AppBar","buttons","Profile","ErrorDisplay","errorMsg","fieldsHaveChanged","fromDB","saveChanges","isEditMode","toggleEditMode","cancelEdit","objectSpread","bind","assertThisInitialized","handleLeavePage","window","addEventListener","removeEventListener","returnValue","onbeforeunload","Prompt","when","message","Profile_UsernameField","change","username","editMode","Profile_CityField","Profile_AddressField","Profile_PostalField","Profile_PhoneNumberField","phonenumber","button","icons_index_es","Profile_EditButton","toggle","cancel","EditButton","UsernameField","PhoneNumberField","PostalField","CityField","AddressField","routes","BrowserRouter","Switch","Route","exact","path","component","assign","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9bba454f.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  withStyles,\r\n  InputLabel,\r\n  Input,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    minWidth: 320\r\n  },\r\n  FormControl: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    width: 300,\r\n    marginTop: 30\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(\r\n  class Login extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\"\r\n      };\r\n    }\r\n    onChange = e => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    handleClickShowPassword = () => {\r\n      this.setState(state => ({ showPassword: !state.showPassword }));\r\n    };\r\n\r\n    submit = () => {\r\n      this.setState({ error: \"\" });\r\n      const data = { email: this.state.email, password: this.state.password };\r\n      const json = JSON.stringify(data);\r\n      fetch(\"http://100.26.100.211:3000/api/users/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: json\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          localStorage.setItem(\"token\", data.token);\r\n          sessionStorage.setItem(\"token\", data.token);\r\n          console.log(data.msg);\r\n          this.setState({ error: data.msg });\r\n        })\r\n        .then(() => {\r\n          if (!this.state.error) this.props.history.push(\"/tvguide\");\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    // clearField = e => {\r\n    //   if (this.state.error) this.setState({ [e.target.name]: \"\" });\r\n    // };\r\n\r\n    render() {\r\n      const { classes } = this.props;\r\n      return (\r\n        <div className={classes.root}>\r\n          <div className={classes.container}>\r\n            <Typography variant=\"h5\">LOGIN</Typography>\r\n            <FormControl className={classes.FormControl}>\r\n              <InputLabel htmlFor=\"component-simple\">Email</InputLabel>\r\n              <Input\r\n                name=\"email\"\r\n                id=\"component-simple\"\r\n                value={this.state.email}\r\n                onChange={this.onChange}\r\n              />\r\n            </FormControl>\r\n            <br />\r\n            <FormControl className={classes.FormControl}>\r\n              <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\r\n              <Input\r\n                name=\"password\"\r\n                id=\"adornment-password\"\r\n                type={this.state.showPassword ? \"text\" : \"password\"}\r\n                value={this.state.password}\r\n                onChange={this.onChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"Toggle password visibility\"\r\n                      onClick={this.handleClickShowPassword}\r\n                    >\r\n                      {this.state.showPassword ? (\r\n                        <Visibility />\r\n                      ) : (\r\n                        <VisibilityOff />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n              <Button onClick={this.submit}>Submit</Button>\r\n              <div>{this.state.error}</div>\r\n              <Link to={\"/register\"}>\r\n                <Typography variant=\"overline\">Register</Typography>\r\n              </Link>\r\n              <Link to={\"/tvguide\"}>\r\n                <Typography variant=\"overline\">TvGuide</Typography>\r\n              </Link>\r\n              <Link to={\"/profile\"}>\r\n                <Typography variant=\"overline\">PROFILE</Typography>\r\n              </Link>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import React from \"react\";\r\nconst styling = {\r\n  backgroundColor: \"#2d2f32\",\r\n  marginTop: \"1em\",\r\n  paddingLeft: \"0.2em\",\r\n  fontSize: \"80%\"\r\n};\r\n\r\nconst Footer = () => <div style={styling}>&copy; 2019 Copyright Text</div>;\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"./Program.css\";\r\n\r\nexport default class Program extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      programData: \"\",\r\n      detailsToggled: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ programData: this.props.channelData });\r\n  }\r\n\r\n  toggleProgramDetails = () => {\r\n    this.setState({ detailsToggled: !this.state.detailsToggled });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main\" onClick={this.toggleProgramDetails}>\r\n          <div>\r\n            {moment(Date.parse(this.state.programData.startTime)).format(\r\n              \"HH.mm\"\r\n            )}\r\n          </div>\r\n          <div>\r\n            {this.state.programData.title}\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div className=\"details\">\r\n          {this.state.detailsToggled\r\n            ? this.state.programData.description\r\n            : null}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Program from \"./Program\";\r\n\r\nimport moment from \"moment\";\r\n\r\nexport default function ShowNonExpired(props) {\r\n  let a = [];\r\n  if (props.isLoaded && !props.showExpired) {\r\n    props.currentDayShows.map((item, index) => {\r\n      let itemTime = moment(item.endTime).format(\"YYYYDDMMHHMMSS\");\r\n      let currentTime = new Date();\r\n      currentTime = moment(currentTime).format(\"YYYYDDMMHHMMSS\");\r\n      if (itemTime > currentTime) {\r\n        a.push(<Program key={index} channelData={item} />);\r\n      }\r\n    });\r\n  }\r\n  return a.map((item, index) => (\r\n    <React.Fragment key={index}>{item}</React.Fragment>\r\n  ));\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  progress: {\r\n    margin: theme.spacing.unit * 2,\r\n    color: \"white\"\r\n  },\r\n  linearColorPrimary: {\r\n    backgroundColor: \"#b2dfdb\"\r\n  },\r\n  linearBarColorPrimary: {\r\n    backgroundColor: \"#00695c\"\r\n  }\r\n});\r\n\r\nfunction LoadingCircle(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Fragment>\r\n      <CircularProgress className={classes.progress} size={30} thickness={5} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nLoadingCircle.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(LoadingCircle);\r\n","import React, { Component } from \"react\";\r\nimport Program from \"./Program\";\r\nimport ShowNonExpired from \"./ShowNonExpired\";\r\nimport moment from \"moment\";\r\nimport \"./Channel.css\";\r\nimport LoadingCircle from \"./LoadingCircle\";\r\n\r\nexport default class TestChannel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      showExpired: false,\r\n      url: this.props.url,\r\n      loadError: \"\",\r\n      dateRange: [0, 1],\r\n      currentDayShows: []\r\n    };\r\n  }\r\n\r\n  formatTime = (offset1, offset2) => {\r\n    let t1 = new Date();\r\n    let t2 = new Date();\r\n    t1 = moment(t1);\r\n    t2 = moment(t2);\r\n    t1 = t1.add(offset1, \"d\").format(\"YYYY-DD-MM\");\r\n    t2 = t2.add(offset2, \"d\").format(\"YYYY-DD-MM\");\r\n    return `startDate=${t1}&endDate=${t2}`;\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps) {\r\n      // this.fetchData();\r\n      this.setState({\r\n        showExpired: this.props.isToggled,\r\n        dateRange: [this.props.startDate, this.props.endDate],\r\n        isLoaded: true,\r\n        currentDayShows: [...this.props.data]\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"channel-main\">\r\n        <h1 className=\"channel-title\">\r\n          <div className=\"title-icon\">{this.props.titleIcon}</div>\r\n\r\n          {this.props.title}\r\n        </h1>\r\n        <div className=\"channel-content\">\r\n          <div>{!this.state.isLoaded ? <LoadingCircle /> : null}</div>\r\n          <div>\r\n            {this.state.isLoaded && this.state.showExpired\r\n              ? // && this.state.showExpired\r\n                this.state.currentDayShows.map((item, index) => (\r\n                  <Program key={index} channelData={item} />\r\n                ))\r\n              : null}\r\n          </div>\r\n\r\n          <ShowNonExpired\r\n            isLoaded={this.state.isLoaded}\r\n            showExpired={this.state.showExpired}\r\n            currentDayShows={this.state.currentDayShows}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport TestChannel from \"./TestChannel\";\r\nimport moment from \"moment\";\r\n\r\nexport default class ChannelContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n      url: this.props.url,\r\n      isLoaded: false,\r\n      showExpired: false,\r\n      allShows: \"\",\r\n      loadError: \"\",\r\n      dateRange: [0, 1],\r\n      currentDayShows: []\r\n    };\r\n  }\r\n  //   componentWillReceiveProps(props, nextProps) {\r\n  //     this.setState(\r\n  //       {\r\n  //         showExpired: props.isToggled,\r\n  //         dateRange: [this.props.startDate, this.props.endDate]\r\n  //       },\r\n  //       () => {\r\n  //         this.parseCurrentDayShows(\r\n  //           this.state.dateRange[0],\r\n  //           this.state.dateRange[1]\r\n  //         );\r\n  //       }\r\n  //     );\r\n  //   }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props !== prevProps) {\r\n      // this.fetchData();\r\n\r\n      this.setState(\r\n        {\r\n          dateRange: [this.props.startDate, this.props.endDate],\r\n          showExpired: this.props.isToggled\r\n        },\r\n        () => {\r\n          this.parseCurrentDayShows(\r\n            this.state.dateRange[0],\r\n            this.state.dateRange[1]\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  parseCurrentDayShows = (offset1, offset2) => {\r\n    console.log(\"Mapping\");\r\n    let d1 = new Date();\r\n    let d = new Date();\r\n    d1 = moment(d1)\r\n      .add(offset2, \"d\")\r\n      .format(\"YYYYDDMM\");\r\n    d = moment(d)\r\n      .add(offset1, \"d\")\r\n      .format(\"YYYYDDMM\");\r\n    d1 = `${d1}040000`;\r\n    d = `${d}040000`;\r\n    let shows = [];\r\n\r\n    if (this.state.dateRange[0] === 0 && !this.state.showExpired) {\r\n      let now = new Date();\r\n      now = moment(now).format(\"YYYYDDMMHHMMSS\");\r\n\r\n      this.setState({ currentDayShows: [] }, () => {\r\n        this.state.allShows.map(item => {\r\n          let time = moment(item.startTime).format(\"YYYYDDMMHHMMSS\");\r\n          if (time >= now && time <= d1) {\r\n            shows.push(item);\r\n          }\r\n        });\r\n        this.setState({\r\n          currentDayShows: shows\r\n        });\r\n      });\r\n    } else {\r\n      this.setState({ currentDayShows: [] }, () => {\r\n        this.state.allShows.map(item => {\r\n          let time = moment(item.startTime).format(\"YYYYDDMMHHMMSS\");\r\n\r\n          if (time >= d && time <= d1) {\r\n            shows.push(item);\r\n          }\r\n        });\r\n        this.setState({\r\n          currentDayShows: shows\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  fetchData = () => {\r\n    console.log(\"Fetching\");\r\n    this.setState({\r\n      url: `${this.props.url}`,\r\n      isLoaded: false\r\n    });\r\n    fetch(this.state.url)\r\n      .then(response => response.json())\r\n      .then(contents => this.setState({ allShows: contents, isLoaded: true }))\r\n      .then(() =>\r\n        this.parseCurrentDayShows(\r\n          this.state.dateRange[0],\r\n          this.state.dateRange[1]\r\n        )\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <TestChannel\r\n          data={this.state.currentDayShows}\r\n          isToggled={this.state.isLoaded}\r\n          title={this.props.title}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 30,\r\n    padding: \"0 30px\",\r\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\"\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\"\r\n  }\r\n})(Button);\r\n\r\nexport default function ActionButton() {\r\n  return <StyledButton>Test</StyledButton>;\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport ChannelContainer from \"./ChannelContainer\";\r\nimport ActionButton from \"./ActionButton\";\r\nimport \"./TvGuide.css\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faFeather,\r\n  faFeatherAlt,\r\n  faCube,\r\n  faCubes\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class TvGuide extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoaded: false,\r\n      showExpired: false,\r\n      apiData: \"\",\r\n      yle1data: \"\",\r\n      yle2data: \"\",\r\n      minDate: 0,\r\n      maxDate: 1\r\n    };\r\n  }\r\n  // TO-DO:\r\n  // Styling\r\n\r\n  toggleShows = () => {\r\n    this.setState({ showExpired: !this.state.showExpired });\r\n  };\r\n\r\n  // const urlForAllChannels = `https://external.api.yle.fi/v1/programs/services.json?type=tvchannel&$\r\n\r\n  switchDate = e => {\r\n    if (e.target.name === \"previous\") {\r\n      this.setState({\r\n        minDate: this.state.minDate - 1,\r\n        maxDate: this.state.maxDate - 1\r\n      });\r\n    } else if (e.target.name === \"next\") {\r\n      this.setState({\r\n        maxDate: this.state.maxDate + 1,\r\n        minDate: this.state.minDate + 1\r\n      });\r\n    }\r\n  };\r\n\r\n  formatTime = (offset1, offset2) => {\r\n    let t1 = new Date();\r\n    let t2 = new Date();\r\n    t1 = moment(t1);\r\n    t2 = moment(t2);\r\n    t1 = t1.add(offset1, \"d\").format(\"YYYY-MM-DD\");\r\n    t2 = t2.add(offset2, \"d\").format(\"YYYY-MM-DD\");\r\n    return `startDate=${t1}&endDate=${t2}`;\r\n  };\r\n\r\n  // Display date, add or subtract days with parameters\r\n  displayDate = offset => {\r\n    let day = new Date();\r\n    day = moment(day);\r\n    day = day.add(offset, \"d\").format(\"DD.MM.YYYY\");\r\n    return <p className=\"date-display\">{day}</p>;\r\n  };\r\n\r\n  logout = () => {\r\n    this.props.history.push(\"/\");\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n  };\r\n\r\n  // `https://external.api.yle.fi/v1/programs/schedules.json?${process.env.REACT_APP_API_KEY}&service=yle-tv1&starttime=2019-01-23T12%3A00%3A00.000%2B0200&endtime=2019-01-23T14%3A00%3A00.000%2B0200`\r\n\r\n  render() {\r\n    const yle1url = `http://100.26.100.211:3000/api/shows?${this.formatTime(\r\n      0,\r\n      7\r\n    )}&channel=yle-tv1`;\r\n    const yle2url = `http://100.26.100.211:3000/api/shows?${this.formatTime(\r\n      0,\r\n      7\r\n    )}&channel=yle-tv2`;\r\n    const yleTeemaUrl = `http://100.26.100.211:3000/api/shows?${this.formatTime(\r\n      0,\r\n      7\r\n    )}&channel=yle-teema-fem`;\r\n    const yleAreenaUrl = `http://100.26.100.211:3000/api/shows?${this.formatTime(\r\n      0,\r\n      7\r\n    )}&channel=yle-areena`;\r\n\r\n    return (\r\n      <div className=\"body\">\r\n        <div className=\"header\" />\r\n        <hr />\r\n        <div className=\"date-select-container\">\r\n          <div className=\"date-select-sub\">\r\n            <div className=\"date-select-unit-left\">\r\n              <PreviousButton\r\n                minDate={this.state.minDate}\r\n                switchDate={this.switchDate}\r\n              />\r\n\r\n              {this.displayDate(this.state.minDate)}\r\n              <NextButton\r\n                minDate={this.state.minDate}\r\n                switchDate={this.switchDate}\r\n              />\r\n            </div>\r\n\r\n            <ToggleExpired\r\n              toggleShows={this.toggleShows}\r\n              minDate={this.state.minDate}\r\n              showExpired={this.state.showExpired}\r\n            />\r\n          </div>\r\n\r\n          <span className=\"info-box\">Click on programs to show info.</span>\r\n          <div className=\"nav-buttons\">\r\n            {/* <button\r\n              className=\"button-profile\"\r\n              onClick={() => {\r\n                this.props.history.push(\"/profile\");\r\n              }}\r\n            >\r\n              Profile\r\n            </button> */}\r\n\r\n            {/* <button className=\"button-logout\" onClick={this.logout}>\r\n              Logout\r\n            </button> */}\r\n            <StyledButton\r\n              children={\"Profile\"}\r\n              onClick={() => {\r\n                this.props.history.push(\"/profile\");\r\n              }}\r\n            />\r\n            <StyledButton children={\"Logout\"} onClick={this.logout} />\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"channels-main\">\r\n          <ChannelContainer\r\n            url={yle1url}\r\n            titleIcon={<FontAwesomeIcon icon={faFeather} />}\r\n            title={\"Yle 1\"}\r\n            isToggled={this.state.showExpired}\r\n            startDate={this.state.minDate}\r\n            endDate={this.state.maxDate}\r\n          />\r\n\r\n          <ChannelContainer\r\n            titleIcon={<FontAwesomeIcon icon={faFeather} />}\r\n            title={\"Yle 2\"}\r\n            url={yle2url}\r\n            isToggled={this.state.showExpired}\r\n            startDate={this.state.minDate}\r\n            endDate={this.state.maxDate}\r\n          />\r\n\r\n          <ChannelContainer\r\n            titleIcon={<FontAwesomeIcon icon={faFeather} />}\r\n            title={\"Areena\"}\r\n            url={yleAreenaUrl}\r\n            isToggled={this.state.showExpired}\r\n            startDate={this.state.minDate}\r\n            endDate={this.state.maxDate}\r\n          />\r\n          <ChannelContainer\r\n            titleIcon={<FontAwesomeIcon icon={faFeather} />}\r\n            title={\"Teema\"}\r\n            url={yleTeemaUrl}\r\n            isToggled={this.state.showExpired}\r\n            startDate={this.state.minDate}\r\n            endDate={this.state.maxDate}\r\n          />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction ToggleExpired(props) {\r\n  if (props.minDate === 0 && !props.showExpired) {\r\n    return (\r\n      <StyledButton children={\"Show Expired\"} onClick={props.toggleShows} />\r\n    );\r\n  }\r\n  if (props.minDate === 0 && props.showExpired) {\r\n    return (\r\n      <StyledButton children={\"Hide Expired\"} onClick={props.toggleShows} />\r\n    );\r\n  } else {\r\n    return (\r\n      <StyledButton\r\n        children={\"Show Expired\"}\r\n        style={{ visibility: \"hidden\" }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction NextButton(props) {\r\n  return props.minDate <= 5 ? (\r\n    <button className=\"date-nav-button\" name=\"next\" onClick={props.switchDate}>\r\n      &gt;\r\n    </button>\r\n  ) : (\r\n    <button className=\"date-nav-button  button-disabled\" disabled>\r\n      &gt;\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction PreviousButton(props) {\r\n  return props.minDate > 0 ? (\r\n    <button\r\n      className=\"date-nav-button\"\r\n      name=\"previous\"\r\n      onClick={props.switchDate}\r\n    >\r\n      &lt;\r\n    </button>\r\n  ) : (\r\n    <button className=\"date-nav-button button-disabled\" disabled>\r\n      &lt;\r\n    </button>\r\n  );\r\n}\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    background: \" #2d2f32\",\r\n    borderRadius: 1,\r\n    border: \"1px white solid\",\r\n    color: \"white\",\r\n    height: 30,\r\n    padding: \"0 30px\",\r\n    // textAlign: \"center\",\r\n    display: \"inline-flex\",\r\n    alignItems: \"center\",\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\"\r\n  }\r\n})(Button);\r\n","import React from \"react\";\r\n\r\nexport default function StatusDisplayer(props) {\r\n  return <div>{props.text}</div>;\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  withStyles,\r\n  InputLabel,\r\n  Input,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport StatusDisplayer from \"./StatusDisplayer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RegisterForm.css\";\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    minWidth: 280\r\n  },\r\n  FormControl: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    width: 300,\r\n    marginTop: 30\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(\r\n  class RegisterForm extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        userName: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        postalCode: \"\",\r\n        phoneNumber: \"\",\r\n        showPassword: false,\r\n        responseText: \"\"\r\n      };\r\n    }\r\n    onChange = e => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n      this.setState(state => ({ showPassword: !state.showPassword }));\r\n    };\r\n\r\n    validateForm = () => {};\r\n\r\n    submit = () => {\r\n      const data = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        userName: this.state.userName,\r\n        address: this.state.address,\r\n        city: this.state.city,\r\n        postalCode: this.state.postalCode,\r\n        phoneNumber: this.state.phoneNumber\r\n      };\r\n      const json = JSON.stringify(data);\r\n      fetch(\"http://100.26.100.211:3000/api/users/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: json\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ responseText: data.msg }))\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    render() {\r\n      const { classes } = this.props;\r\n\r\n      return (\r\n        <div className={classes.root}>\r\n          <div className={classes.container}>\r\n            <Typography variant=\"h5\">REGISTER</Typography>\r\n            {/* <TextField\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            placeholder=\"Email\"\r\n            onChange={this.onChange}\r\n            type=\"text\"\r\n            required=\"true\"\r\n          /> */}\r\n            <FormControl className={classes.FormControl}>\r\n              <InputLabel htmlFor=\"component-simple\">Email</InputLabel>\r\n              <Input\r\n                name=\"email\"\r\n                id=\"component-simple\"\r\n                value={this.state.email}\r\n                onChange={this.onChange}\r\n              />\r\n            </FormControl>\r\n            <br />\r\n            <FormControl className={classes.FormControl}>\r\n              <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\r\n              <Input\r\n                name=\"password\"\r\n                id=\"adornment-password\"\r\n                type={this.state.showPassword ? \"text\" : \"password\"}\r\n                value={this.state.password}\r\n                onChange={this.onChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"Toggle password visibility\"\r\n                      onClick={this.handleClickShowPassword}\r\n                    >\r\n                      {this.state.showPassword ? (\r\n                        <Visibility />\r\n                      ) : (\r\n                        <VisibilityOff />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.FormControl}>\r\n              <InputLabel htmlFor=\"component-simple\">Username</InputLabel>\r\n              <Input\r\n                name=\"userName\"\r\n                id=\"component-simple\"\r\n                value={this.state.userName}\r\n                onChange={this.onChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.FormControl}>\r\n              <InputLabel htmlFor=\"component-simple\">City</InputLabel>\r\n              <Input\r\n                name=\"city\"\r\n                id=\"component-simple\"\r\n                value={this.state.city}\r\n                onChange={this.onChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.FormControl}>\r\n              <InputLabel htmlFor=\"component-simple\">Address</InputLabel>\r\n              <Input\r\n                name=\"address\"\r\n                id=\"component-simple\"\r\n                value={this.state.address}\r\n                onChange={this.onChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.FormControl}>\r\n              <InputLabel htmlFor=\"component-simple\">Postal Code</InputLabel>\r\n              <Input\r\n                name=\"postalCode\"\r\n                id=\"component-simple\"\r\n                value={this.state.postalCode}\r\n                onChange={this.onChange}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.FormControl}>\r\n              <InputLabel htmlFor=\"component-simple\">Phone number</InputLabel>\r\n              <Input\r\n                name=\"phoneNumber\"\r\n                id=\"component-simple\"\r\n                value={this.state.phoneNumber}\r\n                onChange={this.onChange}\r\n              />\r\n            </FormControl>\r\n            <br />\r\n            <FormControl className={classes.FormControl}>\r\n              <Button onClick={this.submit}>Click</Button>\r\n              <StatusDisplayer text={this.state.responseText} />\r\n              <Link to={\"/\"}>\r\n                {\" \"}\r\n                <Typography variant=\"overline\">LOGIN</Typography>\r\n              </Link>\r\n              <Link to={\"/profile\"}>\r\n                <Typography variant=\"overline\">PROFILE</Typography>\r\n              </Link>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute(WrappedComponent) {\r\n  return class extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        loading: true,\r\n        redirect: false\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      fetch(\"http://100.26.100.211:3000/api/auth\", {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization:\r\n            \"Bearer \" + localStorage.getItem(\"token\") ||\r\n            sessionStorage.getItem(\"token\"),\r\n          \"x-access-token\":\r\n            localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            throw new Error(res.error);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          localStorage.clear();\r\n          sessionStorage.clear();\r\n          this.setState({ loading: false, redirect: true });\r\n        });\r\n    }\r\n    render() {\r\n      if (this.state.loading) {\r\n        return null;\r\n      }\r\n      if (this.state.redirect) {\r\n        return <Redirect to=\"/\" />;\r\n      }\r\n      return (\r\n        <Fragment>\r\n          <WrappedComponent {...this.props} />\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  withStyles\r\n} from \"@material-ui/core/\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    minWidth: 350\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 12,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\"\r\n  }\r\n});\r\n\r\nfunction ButtonAppBar(props) {\r\n  const { classes } = props;\r\n  let location = props.history.location.pathname.split(\"/\");\r\n  location = location[1].toUpperCase();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            {location}\r\n          </Typography>\r\n\r\n          <Button>\r\n            <Link to={\"/tvguide\"} className={classes.link}>\r\n              <Typography color=\"inherit\">TVGUIDE</Typography>\r\n            </Link>\r\n          </Button>\r\n          <Button\r\n            color=\"inherit\"\r\n            onClick={() => {\r\n              localStorage.clear();\r\n              sessionStorage.clear();\r\n              props.history.push(\"/\");\r\n            }}\r\n          >\r\n            LOGOUT\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ButtonAppBar);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport AppBar from \"./AppBar\";\r\n\r\nexport const Home = props => {\r\n  return (\r\n    <Fragment>\r\n      <AppBar history={props.history} />\r\n      {/* This is home\r\n      <br />\r\n      <Link to={\"/profile\"}>\r\n        <Typography variant=\"overline\">TO PROFILE</Typography>\r\n      </Link>\r\n      <Link to={\"/tvguide\"}>\r\n        <Typography variant=\"overline\">TO TvGuide</Typography>\r\n      </Link>\r\n      <Link to={\"/\"}>\r\n        <Typography variant=\"overline\">TO LOGIN</Typography>\r\n      </Link>\r\n      <Link to={\"/\"}>\r\n        <Typography\r\n          variant=\"overline\"\r\n          onClick={() => {\r\n            localStorage.clear();\r\n            sessionStorage.clear();\r\n          }}\r\n        >\r\n          LOGOUT\r\n        </Typography>\r\n      </Link> */}\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { Fragment, Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Typography,\r\n  withStyles,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { Edit, Save, Cancel } from \"@material-ui/icons/\";\r\nimport AppBar from \"../Home/AppBar\";\r\nimport { Prompt } from \"react-router\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    minWidth: 350\r\n  },\r\n  FormControl: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    width: 300,\r\n    marginTop: 30\r\n  },\r\n\r\n  buttons: {\r\n    display: \"inline-flex\",\r\n    justifyContent: \"space-between\"\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(\r\n  class Profile extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        fromDB: {\r\n          ...props.data\r\n        },\r\n        ...props.data,\r\n        errorMsg: null,\r\n        isEditMode: false\r\n      };\r\n      this.fieldsHaveChanged = this.fieldsHaveChanged.bind(this);\r\n      this.handleLeavePage = this.handleLeavePage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n      window.addEventListener(\"beforeunload\", this.handleLeavePage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener(\"beforeunload\", this.handleLeavePage);\r\n    }\r\n\r\n    handleLeavePage(e) {\r\n      let changed = this.fieldsHaveChanged();\r\n      if (changed) {\r\n        const confirmationMessage = \"Hello\";\r\n        e.returnValue = confirmationMessage;\r\n        return confirmationMessage;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // OnChangeHandler for inputs, uses elements name to determine which state field to change\r\n    onChange = e => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    // handleEdit = item => {\r\n    //   this.setState({ item: !this.state.item });\r\n    // };\r\n\r\n    ErrorDisplay = () => {\r\n      if (this.state.errorMsg) {\r\n        return <Fragment>{this.state.errorMsg}</Fragment>;\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    fieldsHaveChanged = () => {\r\n      if (\r\n        this.state.fromDB.userName !== this.state.userName ||\r\n        this.state.fromDB.address !== this.state.address ||\r\n        this.state.fromDB.city !== this.state.city ||\r\n        this.state.fromDB.phoneNumber !== this.state.phoneNumber ||\r\n        this.state.fromDB.postalCode !== this.state.postalCode\r\n      ) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n    saveChanges = () => {\r\n      if (this.state.errorMsg !== null) this.setState({ errorMsg: null });\r\n      if (this.fieldsHaveChanged()) {\r\n        let json = {\r\n          email: this.state.email,\r\n          address: this.state.address,\r\n          city: this.state.city,\r\n          postalCode: this.state.postalCode,\r\n          userName: this.state.userName,\r\n          phoneNumber: this.state.phoneNumber\r\n        };\r\n        // if (this.state.errorMsg === []) {\r\n        fetch(\"http://100.26.100.211:3000/api/users/save\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization:\r\n              \"Bearer \" + localStorage.getItem(\"token\") ||\r\n              sessionStorage.getItem(\"token\"),\r\n            \"x-access-token\":\r\n              localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\")\r\n          },\r\n          body: JSON.stringify(json)\r\n        })\r\n          .then(res => {\r\n            if (res.status === 200) {\r\n              // If save was successful, fromDB state from fields so that subsequent save attempts won't go through unless the fields have actually changed.\r\n              this.setState(\r\n                {\r\n                  fromDB: {\r\n                    city: this.state.city,\r\n                    address: this.state.address,\r\n                    postalCode: this.state.postalCode,\r\n                    userName: this.state.userName,\r\n                    phoneNumber: this.state.phoneNumber\r\n                  }\r\n                },\r\n                () => {\r\n                  this.setState({ isEditMode: false });\r\n                }\r\n              );\r\n              return res.json();\r\n            }\r\n            if (res.status === 400) {\r\n              return res.json();\r\n            } else {\r\n              localStorage.clear();\r\n              sessionStorage.clear();\r\n              this.props.history.push(\"/\");\r\n            }\r\n          })\r\n          .then(data => {\r\n            console.log(data.msg);\r\n            this.setState({ errorMsg: data.msg });\r\n          })\r\n          .catch(err => console.log(err));\r\n      }\r\n    };\r\n\r\n    // setOriginalValues = () => {\r\n    //   this.setState({fromDB:this.state.fromDB, ...this.state.fromDb, isEditMode: false });\r\n    // };\r\n    toggleEditMode = () => {\r\n      this.setState({ isEditMode: !this.state.isEditMode });\r\n    };\r\n    cancelEdit = () => {\r\n      if (this.fieldsHaveChanged) {\r\n        // if (window.confirm(\"Are you sure you want to discard changes?\")) {\r\n        this.setState(\r\n          {\r\n            userName: this.state.fromDB.userName,\r\n            address: this.state.fromDB.address,\r\n            city: this.state.fromDB.city,\r\n            phoneNumber: this.state.fromDB.phoneNumber,\r\n            postalCode: this.state.fromDB.postalCode\r\n          },\r\n          () => {\r\n            this.toggleEditMode();\r\n          }\r\n        );\r\n      }\r\n      // }\r\n    };\r\n\r\n    render() {\r\n      const { classes } = this.props;\r\n      window.onbeforeunload = function(e) {};\r\n      return (\r\n        <Fragment>\r\n          <Prompt\r\n            when={this.fieldsHaveChanged()}\r\n            message=\"You have unsaved changes. Are you sure you want to discard the changes?\"\r\n          />\r\n          <AppBar history={this.props.history} />\r\n          <div className={classes.root}>\r\n            <div className={classes.container}>\r\n              <FormControl className={classes.FormControl}>\r\n                <UsernameField\r\n                  change={this.onChange}\r\n                  username={this.state.userName}\r\n                  editMode={this.state.isEditMode}\r\n                />\r\n\r\n                <CityField\r\n                  change={this.onChange}\r\n                  city={this.state.city}\r\n                  editMode={this.state.isEditMode}\r\n                />\r\n                <AddressField\r\n                  change={this.onChange}\r\n                  address={this.state.address}\r\n                  editMode={this.state.isEditMode}\r\n                />\r\n                <PostalField\r\n                  change={this.onChange}\r\n                  postalCode={this.state.postalCode}\r\n                  editMode={this.state.isEditMode}\r\n                />\r\n                <PhoneNumberField\r\n                  change={this.onChange}\r\n                  phonenumber={this.state.phoneNumber}\r\n                  editMode={this.state.isEditMode}\r\n                />\r\n                <br />\r\n                <div className={classes.buttons}>\r\n                  <Button onClick={this.saveChanges} className={classes.button}>\r\n                    <Save />\r\n                    Save Changes\r\n                  </Button>\r\n\r\n                  <EditButton\r\n                    editMode={this.state.isEditMode}\r\n                    toggle={this.toggleEditMode}\r\n                    cancel={this.cancelEdit}\r\n                    classes={classes}\r\n                  />\r\n                </div>\r\n                {this.ErrorDisplay()}\r\n              </FormControl>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst EditButton = props => {\r\n  return (\r\n    <Fragment>\r\n      {!props.editMode ? (\r\n        <Button onClick={props.toggle} className={props.classes.button}>\r\n          <Edit /> EDIT\r\n        </Button>\r\n      ) : (\r\n        <Button onClick={props.cancel} className={props.classes.button}>\r\n          <Cancel /> CANCEL\r\n        </Button>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst UsernameField = props => {\r\n  if (!props.editMode) {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"subtitle1\">Username</Typography>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"userName\"\r\n          id=\"userName\"\r\n          onChange={props.change}\r\n          value={props.username}\r\n          disabled\r\n        />\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"subtitle1\">Username</Typography>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"userName\"\r\n          id=\"userName\"\r\n          onChange={props.change}\r\n          value={props.username}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst PhoneNumberField = props => {\r\n  if (!props.editMode) {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"subtitle1\">Phone Number</Typography>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"phoneNumber\"\r\n          id=\"phoneNumber\"\r\n          onChange={props.change}\r\n          value={props.phonenumber}\r\n          disabled\r\n        />\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"subtitle1\">Username</Typography>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"phoneNumber\"\r\n          id=\"phoneNumber\"\r\n          onChange={props.change}\r\n          value={props.phonenumber}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst PostalField = props => {\r\n  if (!props.editMode) {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"subtitle1\">Postal Code</Typography>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"postalCode\"\r\n          id=\"postalCode\"\r\n          onChange={props.change}\r\n          value={props.postalCode}\r\n          disabled\r\n        />\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"subtitle1\">Postal Code</Typography>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"postalCode\"\r\n          id=\"postalCode\"\r\n          onChange={props.change}\r\n          value={props.postalCode}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst CityField = props => {\r\n  if (!props.editMode) {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"subtitle1\">City</Typography>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"city\"\r\n          id=\"city\"\r\n          onChange={props.change}\r\n          value={props.city}\r\n          disabled\r\n        />\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"subtitle1\">City</Typography>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"city\"\r\n          id=\"city\"\r\n          onChange={props.change}\r\n          value={props.city}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst AddressField = props => {\r\n  if (!props.editMode) {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"subtitle1\">Address</Typography>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"address\"\r\n          id=\"address\"\r\n          onChange={props.change}\r\n          value={props.address}\r\n          disabled\r\n        />\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <Fragment>\r\n        <Typography variant=\"subtitle1\">Address</Typography>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"address\"\r\n          id=\"address\"\r\n          onChange={props.change}\r\n          value={props.address}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\nimport Login from \"../components/Login/Login\";\r\nimport TvGuide from \"../components/TvGuide/TvGuide\";\r\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\r\nimport ProtectedRoute from \"../components/ProtectedRoute\";\r\nimport UserProfile from \"../components/UserProfile\";\r\nimport { Home } from \"../components/Home/Home\";\r\n\r\nimport Profile from \"../components/Profile/Profile\";\r\n\r\nexport default () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Login} />\r\n      <Route exact path=\"/register\" component={RegisterForm} />\r\n      <Route path=\"/tvguide\" component={ProtectedRoute(TvGuide)} />\r\n      <Route exact path=\"/home\" component={ProtectedRoute(Home)} />\r\n      <Route exact path=\"/profile\" component={UserProfile(Profile)} />\r\n\r\n      <Route\r\n        path=\"*\"\r\n        component={() => (\r\n          <div>\r\n            404: Not a valid website <Link to={\"/\"}>TO LOGIN</Link>{\" \"}\r\n          </div>\r\n        )}\r\n      />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function UserProfile(WrappedComponent) {\r\n  return class extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        loading: true,\r\n        redirect: false,\r\n        response: null\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      fetch(\"http://100.26.100.211:3000/api/users/me\", {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization:\r\n            \"Bearer \" + localStorage.getItem(\"token\") ||\r\n            sessionStorage.getItem(\"token\"),\r\n          \"x-access-token\":\r\n            localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\")\r\n        }\r\n      })\r\n        .then(res => {\r\n          if (res.status === 200) {\r\n            return res.json();\r\n          } else {\r\n            throw new Error(res.error);\r\n          }\r\n        })\r\n        .then(data => {\r\n          console.log(data);\r\n          this.setState({ loading: false, response: data });\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n\r\n          this.setState({ loading: false, redirect: true });\r\n        });\r\n    }\r\n    render() {\r\n      if (this.state.loading) {\r\n        return null;\r\n      }\r\n      if (this.state.redirect) {\r\n        return <Redirect to=\"/\" />;\r\n      }\r\n      return (\r\n        <Fragment>\r\n          <WrappedComponent data={this.state.response} {...this.props} />\r\n        </Fragment>\r\n      );\r\n    }\r\n  };\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\n\r\nimport Routes from \"./routes\";\r\n\r\nexport default () => <Routes />;\r\n"],"sourceRoot":""}